#include <iostream>
#include <vector>
using namespace std;

int cnt = 0;//빈칸의 개수
int sudoku[9][9];//스도쿠 보드
vector<pair<int,int>> blank;//빈칸

//입력
void input(){
    for(int i=0;i<9;i++){
        for(int j=0;j<9;j++){
            cin>>sudoku[i][j];
            if(sudoku[i][j]==0){
                blank.push_back({i,j});
                cnt++;
            }
        }
    }
}

//출력
void output(){
    for(int i=0;i<9;i++){
        for(int j=0;j<9;j++){
            cout<<sudoku[i][j]<<" ";
        }
        cout<<"\n";
    }
}
//행조건
bool row(int x,int n){
    for(int i=0;i<9;i++){
        if(sudoku[x][i]==n){
            return false;
        }
    }
    return true;
}
//열조건
bool col(int y,int n){
    for(int i=0;i<9;i++){
        if(sudoku[i][y]==n){
            return false;
        }
    }
    return true;
}
//3*3조건
bool box(int x,int y,int n){
    //상자 시작지점
    int st_x = (x/3)*3;
    int st_y = (y/3)*3;
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            if(sudoku[i+st_x][j+st_y]==n){
                return false;
            }
        }
    }
    return true;
}
//스도쿠 풀이
void solve(int idx){
    //빈칸을 모두 채웠으면
    if(idx==cnt){
        output();
        exit(0);
    }
    //1~9까지의 숫자를 넣어본다.
    for(int j=1;j<=9;j++){
        int nx = blank[idx].first;
        int ny = blank[idx].second;
        //조건을 만족하면 재귀
        if(row(nx,j) && col(ny,j) && box(nx,ny,j)){
            sudoku[nx][ny] = j;//답 적기
            solve(idx+1);//재귀
            sudoku[nx][ny] = 0;//원래대로
        }
    }
}
int main(){
    input();//입력
    solve(0);//스도쿠 풀이
    return 0;
}
