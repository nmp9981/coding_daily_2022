#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long ll;
typedef vector<vector<ll>> Matrix;

ll n,m,g;
const ll r = 2;
const ll mod = 1000000007;
Matrix M(r,vector<ll>(r));
Matrix ans(r,vector<ll>(r));

//유클리드 알고리즘
ll gcd(ll a,ll b){
    //같은 경우
    if(b==0) return a;
    return gcd(b,a%b);
}

//행렬의 곱셈
Matrix mul(Matrix p,Matrix q){
    Matrix temp(r,vector<ll>(r));
    for(int i=0;i<r;i++){
        for(int j=0;j<r;j++){
            for(int k=0;k<r;k++){
                temp[i][j]+=(p[i][k]*q[k][j]);
            }
            temp[i][j]%=mod;
        }
    }
    return temp;
}
//피보나치 수
Matrix pibo(ll x){
    //재귀 종료
    if(x==1) return M;
    
    //분할
    Matrix adj,f;
    f = pibo(x/2);
    if(x%2==0) adj = mul(f,f);
    else adj = mul(mul(f,f),M);
    
    return adj;
}
int main(){
    cin>>n>>m;//입력
    g = gcd(m,n);//최대공약수
    M = {{1,1},{1,0}};//행렬정의
    ans = pibo(g);//피보나치 수
    cout<<ans[1][0];//출력
    return 0;
}
